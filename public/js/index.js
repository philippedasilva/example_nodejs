// Generated by CoffeeScript 1.10.0
(function() {
  $(document).ready(function() {
    $('#inscrire').hide();
    $('#login').hide();
    $("#bloc_metrics").hide();
    $('#save').hide();
    $('#btn_inscrire').click(function() {
      $('#login').hide();
      return $('#inscrire').toggle();
    });
    $('#btn_login').click(function() {
      $('#inscrire').hide();
      return $('#login').toggle();
    });
    $('#save-metrics').click(function() {
      return $('#save').toggle();
    });
    $.getJSON('/username.json', function(data) {
      return $('#username').html(data);
    });
    return $.getJSON('/metrics_users.json', function(batch) {
      var j, len, mu;
      if (batch.length > 0) {
        for (j = 0, len = batch.length; j < len; j++) {
          mu = batch[j];
          $('#btns').append("<button class='btn btn-success btn_batch' data-id='" + mu.id_batch + "'>Batch nÂ° " + mu.id_batch + "</button>");
        }
        return $('.btn_batch').click(function() {
          var id_batch;
          $('#bloc_metrics h3').html($(this).html());
          id_batch = $(this).data("id");
          return $.getJSON('/metricsbyuser.json', function(data) {
            var entete, formatInt, height, i, k, len1, m, margin, svg, tab, tip, type, width, x, xAxis, y, yAxis;
            $('#tab-metrics').empty();
            $('#bloc_metrics svg').empty();
            entete = "<th>Timestamp</th>";
            entete += "<th>Value</th>";
            entete += "<th>Suppr</th>";
            $('#tab-metrics').append(entete);
            i = 0;
            tab = [];
            for (k = 0, len1 = data.length; k < len1; k++) {
              m = data[k];
              if (("" + m.id_batch) === ("" + id_batch)) {
                $('#tab-metrics').append("<tr></tr>");
                $('#tab-metrics tr:eq(' + i + ')').append("<td>" + m.timestamp + "</td>");
                $('#tab-metrics tr:eq(' + i + ')').append("<td>" + m.value + "</td>");
                $('#tab-metrics tr:eq(' + i + ')').append("<td><button class='btn btn-danger btn_suppr' data-id='" + m.id_metric + "'>X</button></td>");
                tab[i] = {
                  "timestamp": "" + m.timestamp,
                  "value": "" + m.value
                };
                i++;
              }
            }
            $('#graph').empty();
            margin = {
              top: 20,
              right: 20,
              bottom: 20,
              left: 20
            };
            width = 300 - margin.left - margin.right;
            height = 200 - margin.top - margin.bottom;
            formatInt = d3.format("d");
            x = d3.scale.ordinal().rangeRoundBands([0, width], .1);
            y = d3.scale.linear().range([height, 0]);
            xAxis = d3.svg.axis().scale(x).orient('bottom');
            yAxis = d3.svg.axis().scale(y).orient('left').tickFormat(formatInt);
            tip = d3.tip().attr('class', 'd3-tip').offset([-10, 0]).html(function(d) {
              return '<strong>Value:</strong> <span style=\'color:red\'>' + d.value + '</span>';
            });
            svg = d3.select('#graph').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
            type = function(d) {
              d.value = +d.value;
              return d;
            };
            svg.call(tip);
            x.domain(tab.map(function(d) {
              return d.timestamp;
            }));
            y.domain([
              0, d3.max(tab, function(d) {
                return d.value;
              })
            ]);
            svg.append('g').attr('class', 'x axis').attr('transform', 'translate(0,' + height + ')').call(xAxis);
            svg.append('g').attr('class', 'y axis').call(yAxis).append('text').attr('transform', 'rotate(-90)').attr('y', 10).attr('dy', '.71em').style('text-anchor', 'end').text('Value');
            svg.selectAll('.bar').data(tab).enter().append('rect').attr('class', 'bar').attr('x', function(d) {
              return x(d.timestamp);
            }).attr('width', x.rangeBand()).attr('y', function(d) {
              return y(d.value);
            }).attr('height', function(d) {
              return height - y(d.value);
            }).on('mouseover', tip.show).on('mouseout', tip.hide);
            return $('#bloc_metrics').show();
          });
        });
      }
    });
  });

}).call(this);
