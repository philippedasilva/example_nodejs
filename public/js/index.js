// Generated by CoffeeScript 1.10.0
(function() {
  $(document).ready(function() {
    $("#bloc_metrics").hide();
    return $('#get-metrics').click(function() {
      return $.getJSON('/metrics.json', function(data) {
        var barPadding, dataset, entete, h, i, j, len, metric, svg, w;
        $('#tab-metrics').empty();
        entete = "<th>Key</th>";
        entete += "<th>Value</th>";
        $('#tab-metrics').append(entete);
        i = 0;
        dataset = [];
        for (j = 0, len = data.length; j < len; j++) {
          metric = data[j];
          dataset[i] = metric.value;
          $('#tab-metrics').append("<tr></tr>");
          $('#tab-metrics tr:eq(' + i + ')').append("<td>" + metric.timestamp + "</td>");
          $('#tab-metrics tr:eq(' + i + ')').append("<td>" + metric.value + "</td>");
          i++;
        }
        w = 500;
        h = 100;
        barPadding = 1;
        svg = d3.select('#bloc_metrics svg');
        svg.selectAll("rect").data(dataset).enter().append("rect").attr("x", 0).attr("width", 20).attr("x", function(d, i) {
          return i * (w / 15 - barPadding);
        }).attr("height", function(d) {
          return d * 4;
        }).attr("y", function(d) {
          return h - d * 4;
        }).attr("fill", function(d) {
          return "rgb(0, " + (d * 10) + ",0)";
        });
        return $('#bloc_metrics').toggle();
      });

      /*
               svg.selectAll "text"
              .data dataset
              .enter()
              .append "text"
              .text (d) ->
      return d
              .attr "x", (d, i) ->
       return i * (w / dataset.length) + (w / dataset.length - barPadding)/ 2
              .attr "y", (d) ->
      return h - (d * 4) + 14
              .attr "text-anchor", "middle"
              .attr "font-family", "sans-serif"
              .attr "font-size", "11px"
              .attr "fill", "white"
       */
    });
  });

}).call(this);
