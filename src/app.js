// Generated by CoffeeScript 1.10.0
(function() {
  var app, express, jade, met, metrics;

  met = [
    {
      timestamp: 3,
      value: 27
    }
  ];

  express = require('express');

  jade = require('jade');

  metrics = require('./metrics');

  app = express();

  app.set('port', 1889);

  app.set('views', __dirname + "/../views");

  app.set('view engine', 'jade');

  app.use('/', express["static"](__dirname + "/../public"));


  /*
  app.use stylus.static(
     src: "#{__dirname}/../public"
     compress: true
  )
   */


  /*
  app.use stylus.middleware(
    src: __dirname + '/../public'
    dest: __dirname + '/../public'
    debug: true
    force: true)
   */


  /*
  app.use require('body-parser')()
  
  app.get '/',(req,res) ->
   res.render 'index',
    locals:
      title: 'Test Page'
  app.get 'metrics.xml', (req,res) ->
  
  app.get 'metrics.json', (req,res) ->
    res.json metrics.get()
   */

  app.post('metric/:id.json', function(req, res) {
    return metric.save(req.param.id(req.body, function(err) {
      if (err) {
        res.status(500).json(err);
      }
      return res.status(200).send("Matrics saved");
    }));
  });

  app.use(require('body-parser')());

  app.get('/', function(req, res) {
    return res.render('index');
  });

  app.get('/metrics.json', function(req, res) {
    return res.status(200).json(metrics.get());
  });

  app.get('/hello/:name', function(req, res) {
    return res.status(200).send(req.params.name);
  });

  app.post('/metric/:id.json', function(req, res) {
    return metrics.save(req.params.id, met, function(err) {
      if (err) {
        return res.status(500).json(err);
      } else {
        return res.status(200).send("Metrics saved");
      }
    });
  });

  app.listen(app.get('port'), function(req, res) {
    return console.log("Server started");
  });


  /* TO USE NODEMON on Windows
    node ./node_modules/nodemon/bin/nodemon
   */

}).call(this);
